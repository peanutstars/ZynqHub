source /opt/pkg/settings.sh

ROOTPATH="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"
GITBRANCH="microzed-2017.4"

zynq() {
    usage() {
        echo
        echo " Usage: zynq <cmd> [<param> ...]"
        echo "  cmd list:"
        echo "    create <bsp> <prject_name>       create a project workspace"
        echo "    init-config                      It will apply the configuration file which builds this project."
        echo "    pull                             pull source from github"
        echo "    build <petalinxu-build options>  build with petalinux-build options"
        echo "    image                            generate boot.bin file."
        echo "    copy <dest_folder>               copy booting image to folder"
    }
    replace() {
        sed -i "s/${1//\//\\\/}.*/${2//\//\\\/}/" $ROOTPATH/$3
    }
    init_config() {
        replace CONFIG_SUBSYSTEM_COMPONENT_U__BOOT_NAME_EXT_LOCAL_SRC_PATH CONFIG_SUBSYSTEM_COMPONENT_U__BOOT_NAME_EXT_LOCAL_SRC_PATH=\"$ROOTPATH/components/u-boot-xlnx\" project-spec/configs/config
        replace CONFIG_SUBSYSTEM_COMPONENT_LINUX__KERNEL_NAME_EXT_LOCAL_SRC_PATH CONFIG_SUBSYSTEM_COMPONENT_LINUX__KERNEL_NAME_EXT_LOCAL_SRC_PATH=\"$ROOTPATH/components/linux-xlnx\" project-spec/configs/config
    }
    git_pull() {
        clone() {
            echo "git clone $1 and branch $GITBRANCH"
            if [ ! -d "$ROOTPATH/components/$1" ] ; then
                git clone https://github.com/peanutstars/$1.git $ROOTPATH/components/$1
                cd $ROOTPATH/components/$1 && git checkout $GITBRANCH ; cd -
            fi
        }
        pull() {
            cd $ROOTPATH/components/$1 && git pull ; cd -
        }
        echo "git pull"
        clone u-boot-xlnx
        pull u-boot-xlnx
        clone linux-xlnx
        pull linux-xlnx
    }
    peta_create() {
        petalinux-create -t project -s $1 -n MicroZED.bsp --force
        git checkout .
        git_pull
        init_config
    }
    peta_build() {
        cd $ROOTPATH && petalinux-build $*
        cd -
    }
    peta_image() {
        cd $ROOTPATH/images/linux && petalinux-package --boot --fsbl zynq_fsbl.elf --fpga mz_petalinux_wrapper.bit --uboot --force
        cd -
    }
    copy_to() {
        echo "Copy image to $1 folder."
        for f in BOOT.BIN image.ub; do
            echo "  >> $f"
            cp -a $ROOTPATH/images/linux/$f $1
        done
        umount $1
    }
    ##############################################################
    echo ROOT PATH: $ROOTPATH
    cmd=$1; shift
    case $cmd in
        [-]*help)
            usage
        ;;
        create)
            peta_create $1
        ;;
        init-config)
            init_config
        ;;
        pull)
            git_pull
        ;;
        build)
            shift; peta_build $*
        ;;
        image)
            peta_image
        ;;
        copy)
            copy_to $1
        ;;
        *)
            usage
        ;;
    esac
}
